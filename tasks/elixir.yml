---
- include_tasks: elixir-deps-debian.yml
  when: ansible_os_family == 'Debian'

- include_tasks: elixir-deps-redhat.yml
  when: ansible_os_family == 'RedHat'

- name: Elixir | Check if asdf erlang is present
  shell: asdf plugin list | grep erlang
  ignore_errors: yes
  register: asdf_erlang_present
  tags: elixir
  changed_when: false
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Install asdf erlang
  shell: asdf plugin add erlang
  when: asdf_erlang_present is failed
  tags: elixir
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Check if asdf elixir is present
  shell: asdf plugin list | grep elixir
  ignore_errors: yes
  register: asdf_elixir_present
  tags: elixir
  changed_when: false
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Install asdf elixir
  shell: asdf plugin add elixir
  when: asdf_elixir_present is failed
  tags: elixir
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Check if erlang version is present
  shell: asdf list erlang | grep {{ asdf_erlang_version }}
  ignore_errors: yes
  register: asdf_erlang_version_present
  tags: elixir
  changed_when: false
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Install erlang version
  shell: asdf install erlang {{ asdf_erlang_version }}
  when: asdf_erlang_version_present is failed
  tags: elixir
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Check if elixir version is present
  shell: asdf list elixir | grep {{ asdf_elixir_version }}
  ignore_errors: yes
  register: asdf_elixir_version_present
  tags: elixir
  changed_when: false
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Install elixir version
  shell: asdf install elixir {{ asdf_elixir_version }}
  when: asdf_elixir_version_present is failed
  tags: elixir
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Set global version of erlang
  lineinfile:
    path: "/home/{{ asdf_user }}/.tool-versions"
    line: 'erlang {{ asdf_erlang_version }}'
    regexp: '^erlang '
    owner: "{{ asdf_user }}"
    group: "{{ asdf_user }}"
  become: true

- name: Elixir | Set global version of elixir
  lineinfile:
    path: "/home/{{ asdf_user }}/.tool-versions"
    line: 'elixir {{ asdf_elixir_version }}'
    regexp: '^elixir '
    owner: "{{ asdf_user }}"
    group: "{{ asdf_user }}"
  become: true
