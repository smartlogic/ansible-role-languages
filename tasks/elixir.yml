---
- name: Elixir | Check if asdf-erlang is present
  shell: asdf plugin-list | grep erlang
  ignore_errors: yes
  register: asdf_erlang_present
  tags: elixir
  changed_when: false
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Install asdf-erlang
  shell: asdf plugin-add erlang https://github.com/asdf-vm/asdf-erlang.git
  when: asdf_erlang_present | failed
  tags: elixir
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Check if asdf-elixir is present
  shell: asdf plugin-list | grep elixir
  ignore_errors: yes
  register: asdf_elixir_present
  tags: elixir
  changed_when: false
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Install asdf-elixir
  shell: asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git
  when: asdf_elixir_present | failed
  tags: elixir
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Check if erlang version is present
  shell: asdf list erlang | grep {{ asdf_erlang_version }}
  ignore_errors: yes
  register: asdf_erlang_version_present
  tags: elixir
  changed_when: false
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Install erlang version
  shell: asdf install erlang {{ asdf_erlang_version }}
  when: asdf_erlang_version_present | failed
  tags: elixir
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Check if elixir version is present
  shell: asdf list elixir | grep {{ asdf_elixir_version }}
  ignore_errors: yes
  register: asdf_elixir_version_present
  tags: elixir
  changed_when: false
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Install elixir version
  shell: asdf install elixir {{ asdf_elixir_version }}
  when: asdf_elixir_version_present | failed
  tags: elixir
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Set global version of erlang
  lineinfile:
    path: "/home/{{ asdf_user }}/.tool-versions"
    line: 'erlang {{ asdf_erlang_version }}'
    regexp: '^erlang '
  become: true
  become_user: "{{ asdf_user }}"

- name: Elixir | Set global version of elixir
  lineinfile:
    path: "/home/{{ asdf_user }}/.tool-versions"
    line: 'elixir {{ asdf_elixir_version }}'
    regexp: '^elixir '
  become: true
  become_user: "{{ asdf_user }}"
